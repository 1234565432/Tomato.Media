#include <sdkddkver.h>
#define DEFINE_NS_ONLY
#include "../Tomato.Core.Shared/common.h"

import "oaidl.idl";
import "ocidl.idl";
import "inspectable.idl";
import "windows.foundation.idl";
import "windows.storage.streams.idl";

DEFINE_NS_CORE

runtimeclass Logger;

[
	version(NTDDI_WIN8), 
	uuid(30109B18-752E-49AC-B33D-AB7BBB62A971),
	exclusiveto(Logger)
]
interface ILogger : IInspectable
{
	HRESULT Information([in] HSTRING message);
}

[
	version(NTDDI_WIN8),
	uuid(145F53DC-6E80-4607-AF5E-96A553C5F1DA),
	exclusiveto(Logger)
]
interface ILoggerFactory : IInspectable
{
	HRESULT Create([in] HSTRING typeName, [out, retval] Logger** logger);
}

[version(NTDDI_WIN8)]
[activatable(ILoggerFactory, NTDDI_WIN8)]
[marshaling_behavior(agile)]
runtimeclass Logger
{
	[default] interface ILogger;
}

runtimeclass PackageEntry;

[
	version(NTDDI_WIN8),
	uuid(F45246D4-B693-4369-A2B8-CED47E0BA955),
	exclusiveto(PackageEntry)
]
interface IPackageEntry : IInspectable
{
	[propget]
	HRESULT UncompressedSize([out, retval]UINT64* value);
}

[version(NTDDI_WIN8)]
[marshaling_behavior(agile)]
runtimeclass PackageEntry
{
	[default] interface IPackageEntry;
}

runtimeclass PackageReader;

[
	version(NTDDI_WIN8),
	uuid(06E9A825-1EE0-44C9-9797-D43833D5A75D),
	exclusiveto(PackageReader)
]
interface IPackageReader : IInspectable
{
	HRESULT GetAllEntries([in] Windows.Foundation.Collections.IVector<PackageEntry*>* entries);
	HRESULT ExtractFile([in]PackageEntry* entry, [in] Windows.Storage.Streams.IBuffer* buffer);
}

[
	version(NTDDI_WIN8),
	uuid(D30D8910-F152-4CD3-8ED8-BEDD3949E39D),
	exclusiveto(PackageReader)
]
interface IPackageReaderFactory : IInspectable
{
	HRESULT Create([in] HSTRING path, [out, retval] PackageReader** packageReader);
}

[version(NTDDI_WIN8)]
[activatable(IPackageReaderFactory, NTDDI_WIN8)]
[marshaling_behavior(agile)]
runtimeclass PackageReader
{
	[default] interface IPackageReader;
}

END_NS_CORE